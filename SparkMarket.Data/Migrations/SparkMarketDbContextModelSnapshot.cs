// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SparkMarket.Data.Concrete.EntityFramework.context;

#nullable disable

namespace SparkMarket.Data.Migrations
{
    [DbContext(typeof(SparkMarketDbContext))]
    partial class SparkMarketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SparkMarket.Model.Entity.Banka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("BankaAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Banka", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("BirimAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Birim", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdresId")
                        .HasColumnType("int");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaturaNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FaturaTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("KargoFisNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToplamTutari")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.ToTable("Fatura", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.FaturaDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("BirimFiyati")
                        .HasColumnType("int");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SatirToplami")
                        .HasColumnType("int");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FaturaId");

                    b.HasIndex("UrunId");

                    b.ToTable("FaturaDetay", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.FiyatTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiyatTipiAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FiyatTipi", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Il", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IlAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ilAdi");

                    b.Property<int?>("IlKodu")
                        .HasColumnType("int")
                        .HasColumnName("ilKodu");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("il", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Ilce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IlId")
                        .HasColumnType("int")
                        .HasColumnName("ilId");

                    b.Property<string>("IlceAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ilceAdi");

                    b.Property<int?>("IlceKodu")
                        .HasColumnType("int")
                        .HasColumnName("ilceKodu");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IlId");

                    b.ToTable("ilce", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Indirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Baslik")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("IndirimDegeri")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("IndirimTipiId")
                        .HasColumnType("int");

                    b.Property<string>("KuponKodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("KuponMu")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MinTutar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IndirimTipiId");

                    b.ToTable("Indirim", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.IndirimTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndirimTipAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IndirimTipi", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KargoFirması")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kargo", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)");

                    b.Property<string>("KategoriAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Keywords")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int?>("UstKategoriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UstKategoriId");

                    b.ToTable("Kategori", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KategoriOzellik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OzellikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("OzellikId");

                    b.ToTable("KategoriOzellik", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kdv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KdvAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("KdvOrani")
                        .HasColumnType("float");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kdv", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("CepTelefonu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("CepTelefonuOnay")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime");

                    b.Property<int?>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("EmailOnay")
                        .HasColumnType("bit");

                    b.Property<int?>("HataliGirisSayisi")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP");

                    b.Property<int?>("KullaniciTipi")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Resim")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sifre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TckimlikNo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("TCKimlikNo");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciTipi");

                    b.ToTable("Kullanici", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciAdre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IlId")
                        .HasColumnType("int")
                        .HasColumnName("ilId");

                    b.Property<int?>("IlceId")
                        .HasColumnType("int")
                        .HasColumnName("ilceId");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IlId");

                    b.HasIndex("IlceId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullaniciAdres");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciKurumsal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("VergiDairesi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VergiNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullaniciKurumsal", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("RolId");

                    b.ToTable("KullaniciRol", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullaniciTipiAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KullaniciTipi", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarkaAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Marka", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Baslik")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuIcon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UstMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UstMenuId");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.MenuYetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DeleteYetki")
                        .HasColumnType("bit");

                    b.Property<bool?>("InsertYetki")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<bool?>("SelectYetki")
                        .HasColumnType("bit");

                    b.Property<bool?>("UpdateYetki")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RolId");

                    b.ToTable("MenuYetki", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Odeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("BankaId")
                        .HasColumnType("int");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OdemeTuruId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OdemeTutari")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Onay")
                        .HasColumnType("bit");

                    b.Property<int?>("SiparisId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BankaId");

                    b.HasIndex("OdemeTuruId");

                    b.HasIndex("SiparisId");

                    b.ToTable("Odeme", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.OdemeTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OdemeTuruAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OdemeTuru", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Ozellik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OzellikAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OzellikTipi")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Ozellikler");

                    b.ToTable("Ozellik", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.OzellikSecenek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OzellikId")
                        .HasColumnType("int");

                    b.Property<string>("Secenek")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OzellikId");

                    b.ToTable("OzellikSecenek", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("RolAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Sepet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Adet")
                        .HasColumnType("int");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunId");

                    b.ToTable("Sepet", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Sipari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FaturaAdresId")
                        .HasColumnType("int");

                    b.Property<int?>("IndirimId")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiparisDurumId")
                        .HasColumnType("int");

                    b.Property<string>("SiparisKodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SiparisTarihi")
                        .HasColumnType("datetime");

                    b.Property<int?>("TeslimatAdresId")
                        .HasColumnType("int");

                    b.Property<int?>("TeslimatTipi")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToplamTutar")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("FaturaAdresId");

                    b.HasIndex("IndirimId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("SiparisDurumId");

                    b.HasIndex("TeslimatAdresId");

                    b.HasIndex("TeslimatTipi");

                    b.ToTable("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.SiparisDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BirimFiyati")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SatirToplami")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.Property<int?>("İndirimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.ToTable("SiparisDetay", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.SiparisDurum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiparisDurumAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SiparisDurum", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.SiparisKargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Durumu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GonderimTarihi")
                        .HasColumnType("datetime");

                    b.Property<int?>("KargoId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiparisId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TeslimatTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("KargoId");

                    b.HasIndex("SiparisId");

                    b.ToTable("SiparisKargo", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.TaksitSecenek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("BankaId")
                        .HasColumnType("int");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaksitCizelge")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TaksitSayisi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankaId");

                    b.ToTable("TaksitSecenek", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.TeslimatTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeslimatTipiAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TeslimatTipi", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("BirimId")
                        .HasColumnType("int");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int?>("KdvId")
                        .HasColumnType("int");

                    b.Property<string>("Keywords")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int?>("MarkaId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Stok")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UrunAdi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrunKodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("KdvId");

                    b.HasIndex("MarkaId");

                    b.ToTable("Urun", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunFiyat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiyatTipiId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("UrunFiyati")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiyatTipiId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunFiyat", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunIndirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IndirimId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunIndirim", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunOzellikDeger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OzellikId")
                        .HasColumnType("int");

                    b.Property<int?>("SecenekId")
                        .HasColumnType("int");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OzellikId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunOzellikDeger", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunResim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResimUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunResim", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunYorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DegistirenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Onay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("datetime");

                    b.Property<int?>("Onaylayan")
                        .HasColumnType("int");

                    b.Property<int?>("Puan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.Property<string>("Yorum")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunYorum", (string)null);
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Fatura", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Sipari", "Siparis")
                        .WithMany("Faturas")
                        .HasForeignKey("SiparisId")
                        .IsRequired()
                        .HasConstraintName("FK_Fatura_Siparis");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.FaturaDetay", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Fatura", "Fatura")
                        .WithMany("FaturaDetays")
                        .HasForeignKey("FaturaId")
                        .HasConstraintName("FK_FaturaDetay_Fatura");

                    b.HasOne("SparkMarket.Model.Entity.Urun", "Urun")
                        .WithMany("FaturaDetays")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_FaturaDetay_Urun");

                    b.Navigation("Fatura");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Ilce", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Il", "Il")
                        .WithMany("Ilces")
                        .HasForeignKey("IlId")
                        .HasConstraintName("FK_ilce_il");

                    b.Navigation("Il");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Indirim", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.IndirimTipi", "IndirimTipi")
                        .WithMany("Indirims")
                        .HasForeignKey("IndirimTipiId")
                        .HasConstraintName("FK_Indirim_IndirimTipi");

                    b.Navigation("IndirimTipi");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kategori", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Kategori", "UstKategori")
                        .WithMany("InverseUstKategori")
                        .HasForeignKey("UstKategoriId")
                        .HasConstraintName("FK_Kategori_Kategori");

                    b.Navigation("UstKategori");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KategoriOzellik", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Kategori", "Kategori")
                        .WithMany("KategoriOzelliks")
                        .HasForeignKey("KategoriId")
                        .HasConstraintName("FK_KategoriOzellik_Kategori");

                    b.HasOne("SparkMarket.Model.Entity.Ozellik", "Ozellik")
                        .WithMany("KategoriOzelliks")
                        .HasForeignKey("OzellikId")
                        .HasConstraintName("FK_KategoriOzellik_Ozellik");

                    b.Navigation("Kategori");

                    b.Navigation("Ozellik");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kullanici", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.KullaniciTipi", "KullaniciTipiNavigation")
                        .WithMany("Kullanicis")
                        .HasForeignKey("KullaniciTipi")
                        .HasConstraintName("FK_Kullanici_KullaniciTipi");

                    b.Navigation("KullaniciTipiNavigation");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciAdre", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Il", "Il")
                        .WithMany("KullaniciAdres")
                        .HasForeignKey("IlId")
                        .HasConstraintName("FK_KullaniciAdres_il");

                    b.HasOne("SparkMarket.Model.Entity.Ilce", "Ilce")
                        .WithMany("KullaniciAdres")
                        .HasForeignKey("IlceId")
                        .HasConstraintName("FK_KullaniciAdres_ilce");

                    b.HasOne("SparkMarket.Model.Entity.Kullanici", "Kullanici")
                        .WithMany("KullaniciAdres")
                        .HasForeignKey("KullaniciId")
                        .HasConstraintName("FK_KullaniciAdres_Kullanici");

                    b.Navigation("Il");

                    b.Navigation("Ilce");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciKurumsal", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Kullanici", "Kullanici")
                        .WithMany("KullaniciKurumsals")
                        .HasForeignKey("KullaniciId")
                        .HasConstraintName("FK_KullaniciKurumsal_Kullanici");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciRol", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Kullanici", "Kullanici")
                        .WithMany("KullaniciRols")
                        .HasForeignKey("KullaniciId")
                        .HasConstraintName("FK_KullaniciRol_Kullanici");

                    b.HasOne("SparkMarket.Model.Entity.Rol", "Rol")
                        .WithMany("KullaniciRols")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK_KullaniciRol_Rol");

                    b.Navigation("Kullanici");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Menu", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Menu", "UstMenu")
                        .WithMany("InverseUstMenu")
                        .HasForeignKey("UstMenuId")
                        .HasConstraintName("FK_Menu_Menu");

                    b.Navigation("UstMenu");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.MenuYetki", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Menu", "Menu")
                        .WithMany("MenuYetkis")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_MenuYetki_Menu");

                    b.HasOne("SparkMarket.Model.Entity.Rol", "Rol")
                        .WithMany("MenuYetkis")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK_MenuYetki_Rol");

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Odeme", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Banka", "Banka")
                        .WithMany("Odemes")
                        .HasForeignKey("BankaId")
                        .HasConstraintName("FK_Odeme_Banka");

                    b.HasOne("SparkMarket.Model.Entity.OdemeTuru", "OdemeTuru")
                        .WithMany("Odemes")
                        .HasForeignKey("OdemeTuruId")
                        .HasConstraintName("FK_Odeme_OdemeTuru");

                    b.HasOne("SparkMarket.Model.Entity.Sipari", "Siparis")
                        .WithMany("Odemes")
                        .HasForeignKey("SiparisId")
                        .HasConstraintName("FK_Odeme_Siparis");

                    b.Navigation("Banka");

                    b.Navigation("OdemeTuru");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.OzellikSecenek", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Ozellik", "Ozellik")
                        .WithMany("OzellikSeceneks")
                        .HasForeignKey("OzellikId")
                        .HasConstraintName("FK_OzellikSecenek_Ozellik");

                    b.Navigation("Ozellik");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Sepet", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Kullanici", "Kullanici")
                        .WithMany("Sepets")
                        .HasForeignKey("KullaniciId")
                        .HasConstraintName("FK_Sepet_Kullanici");

                    b.HasOne("SparkMarket.Model.Entity.Urun", "Urun")
                        .WithMany("Sepets")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_Sepet_Urun");

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Sipari", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.KullaniciAdre", "FaturaAdres")
                        .WithMany("SipariFaturaAdres")
                        .HasForeignKey("FaturaAdresId")
                        .HasConstraintName("FK_Siparis_KullaniciAdres");

                    b.HasOne("SparkMarket.Model.Entity.Indirim", "Indirim")
                        .WithMany("Siparis")
                        .HasForeignKey("IndirimId")
                        .HasConstraintName("FK_Siparis_Indirim");

                    b.HasOne("SparkMarket.Model.Entity.Kullanici", "Kullanici")
                        .WithMany("Siparis")
                        .HasForeignKey("KullaniciId")
                        .HasConstraintName("FK_Siparis_Kullanici");

                    b.HasOne("SparkMarket.Model.Entity.SiparisDurum", "SiparisDurum")
                        .WithMany("Siparis")
                        .HasForeignKey("SiparisDurumId")
                        .HasConstraintName("FK_Siparis_SiparisDurum");

                    b.HasOne("SparkMarket.Model.Entity.KullaniciAdre", "TeslimatAdres")
                        .WithMany("SipariTeslimatAdres")
                        .HasForeignKey("TeslimatAdresId")
                        .HasConstraintName("FK_Siparis_KullaniciAdres1");

                    b.HasOne("SparkMarket.Model.Entity.TeslimatTipi", "TeslimatTipiNavigation")
                        .WithMany("Siparis")
                        .HasForeignKey("TeslimatTipi")
                        .HasConstraintName("FK_Siparis_TeslimatTipi");

                    b.Navigation("FaturaAdres");

                    b.Navigation("Indirim");

                    b.Navigation("Kullanici");

                    b.Navigation("SiparisDurum");

                    b.Navigation("TeslimatAdres");

                    b.Navigation("TeslimatTipiNavigation");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.SiparisDetay", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Sipari", "Siparis")
                        .WithMany("SiparisDetays")
                        .HasForeignKey("SiparisId")
                        .HasConstraintName("FK_SiparisDetay_Siparis");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.SiparisKargo", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Kargo", "Kargo")
                        .WithMany("SiparisKargos")
                        .HasForeignKey("KargoId")
                        .HasConstraintName("FK_SiparisKargo_Kargo");

                    b.HasOne("SparkMarket.Model.Entity.Sipari", "Siparis")
                        .WithMany("SiparisKargos")
                        .HasForeignKey("SiparisId")
                        .HasConstraintName("FK_SiparisKargo_Siparis");

                    b.Navigation("Kargo");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.TaksitSecenek", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Banka", "Banka")
                        .WithMany("TaksitSeceneks")
                        .HasForeignKey("BankaId")
                        .HasConstraintName("FK_TaksitSecenek_Banka");

                    b.Navigation("Banka");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Urun", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Birim", "Birim")
                        .WithMany("Uruns")
                        .HasForeignKey("BirimId")
                        .HasConstraintName("FK_Urun_Birim");

                    b.HasOne("SparkMarket.Model.Entity.Kategori", "Kategori")
                        .WithMany("Uruns")
                        .HasForeignKey("KategoriId")
                        .HasConstraintName("FK_Urun_Kategori");

                    b.HasOne("SparkMarket.Model.Entity.Kdv", "Kdv")
                        .WithMany("Uruns")
                        .HasForeignKey("KdvId")
                        .HasConstraintName("FK_Urun_Kdv");

                    b.HasOne("SparkMarket.Model.Entity.Marka", "Marka")
                        .WithMany("Uruns")
                        .HasForeignKey("MarkaId")
                        .HasConstraintName("FK_Urun_Marka");

                    b.Navigation("Birim");

                    b.Navigation("Kategori");

                    b.Navigation("Kdv");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunFiyat", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.FiyatTipi", "FiyatTipi")
                        .WithMany("UrunFiyats")
                        .HasForeignKey("FiyatTipiId")
                        .HasConstraintName("FK_UrunFiyat_FiyatTipi");

                    b.HasOne("SparkMarket.Model.Entity.Urun", "Urun")
                        .WithMany("UrunFiyats")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_UrunFiyat_Urun");

                    b.Navigation("FiyatTipi");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunIndirim", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Urun", "Urun")
                        .WithMany("UrunIndirims")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_UrunIndirim_Urun");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunOzellikDeger", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Ozellik", "Ozellik")
                        .WithMany("UrunOzellikDegers")
                        .HasForeignKey("OzellikId")
                        .HasConstraintName("FK_UrunOzellikDeger_Ozellik");

                    b.HasOne("SparkMarket.Model.Entity.Urun", "Urun")
                        .WithMany("UrunOzellikDegers")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_UrunOzellikDeger_Urun");

                    b.Navigation("Ozellik");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunResim", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Urun", "Urun")
                        .WithMany("UrunResims")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_UrunResim_Urun");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.UrunYorum", b =>
                {
                    b.HasOne("SparkMarket.Model.Entity.Urun", "Urun")
                        .WithMany("UrunYorums")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_UrunYorum_Urun");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Banka", b =>
                {
                    b.Navigation("Odemes");

                    b.Navigation("TaksitSeceneks");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Birim", b =>
                {
                    b.Navigation("Uruns");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Fatura", b =>
                {
                    b.Navigation("FaturaDetays");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.FiyatTipi", b =>
                {
                    b.Navigation("UrunFiyats");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Il", b =>
                {
                    b.Navigation("Ilces");

                    b.Navigation("KullaniciAdres");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Ilce", b =>
                {
                    b.Navigation("KullaniciAdres");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Indirim", b =>
                {
                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.IndirimTipi", b =>
                {
                    b.Navigation("Indirims");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kargo", b =>
                {
                    b.Navigation("SiparisKargos");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kategori", b =>
                {
                    b.Navigation("InverseUstKategori");

                    b.Navigation("KategoriOzelliks");

                    b.Navigation("Uruns");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kdv", b =>
                {
                    b.Navigation("Uruns");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Kullanici", b =>
                {
                    b.Navigation("KullaniciAdres");

                    b.Navigation("KullaniciKurumsals");

                    b.Navigation("KullaniciRols");

                    b.Navigation("Sepets");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciAdre", b =>
                {
                    b.Navigation("SipariFaturaAdres");

                    b.Navigation("SipariTeslimatAdres");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.KullaniciTipi", b =>
                {
                    b.Navigation("Kullanicis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Marka", b =>
                {
                    b.Navigation("Uruns");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Menu", b =>
                {
                    b.Navigation("InverseUstMenu");

                    b.Navigation("MenuYetkis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.OdemeTuru", b =>
                {
                    b.Navigation("Odemes");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Ozellik", b =>
                {
                    b.Navigation("KategoriOzelliks");

                    b.Navigation("OzellikSeceneks");

                    b.Navigation("UrunOzellikDegers");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Rol", b =>
                {
                    b.Navigation("KullaniciRols");

                    b.Navigation("MenuYetkis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Sipari", b =>
                {
                    b.Navigation("Faturas");

                    b.Navigation("Odemes");

                    b.Navigation("SiparisDetays");

                    b.Navigation("SiparisKargos");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.SiparisDurum", b =>
                {
                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.TeslimatTipi", b =>
                {
                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("SparkMarket.Model.Entity.Urun", b =>
                {
                    b.Navigation("FaturaDetays");

                    b.Navigation("Sepets");

                    b.Navigation("UrunFiyats");

                    b.Navigation("UrunIndirims");

                    b.Navigation("UrunOzellikDegers");

                    b.Navigation("UrunResims");

                    b.Navigation("UrunYorums");
                });
#pragma warning restore 612, 618
        }
    }
}
